- name: Check if Xcode is installed
  command: mdfind "kMDItemCFBundleIdentifier == 'com.apple.dt.Xcode'"
  register: xcode_app
  changed_when: false

- name: Checking version installed
  command: xcodebuild -version
  register: xcode_version_installed
  changed_when: false
  ignore_errors: true

- name: Register xcode_installed
  set_fact:
    xcode_installed: "{{ xcode_app.stdout.find(xcode_app_name) != -1 or xcode_version_installed.stdout.find(xcode_full_version) != -1 }}"

- name: Install Xcode
  block:
    - name: check that the xcode archive is valid
      command: >
        pkgutil --check-signature {{ xcode_xip_location }} |
        grep \"Status: signed Apple Software\"

    - name: Install Xcode from XIP file Location
      command: "xip -x {{ xcode_xip_location }}"
      become: yes

    - name: Remove before renaming Xcode
      shell: "rm -rf {{ xcode_app_name }}"
      become: yes

    - name: Rename Xcode app
      shell: "mv Xcode.app {{ xcode_app_name }}"
      become: yes

    - name: Remove before move Xcode To Applications
      shell: "rm -rf /Applications/{{ xcode_app_name }}"
      become: yes

    - name: Move Xcode To Applications
      shell: "mv {{ xcode_app_name }} /Applications"
      become: yes

    - name: Accept License Agreement
      command: "{{ xcode_build }} -license accept"
      become: true

    - name: Run Xcode first launch
      command: "{{ xcode_build }} -runFirstLaunch"
      become: true
      when: xcode_major_version | int >= 9

    - name: Xcode 8 packages
      include: xcode8_packages.yml
      when: xcode_major_version | int == 8

    - name: Switch to xcode installed
      command: "xcode-select -switch /Applications/{{ xcode_app_name }}/Contents/Developer"
      become: yes
  when: not xcode_installed

- name: Enable Developer Mode
  developer_mode:
    state: enable
  become: true
